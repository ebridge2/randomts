{
    "collab_server" : "",
    "contents" : "#' A function to randomly sample a population of timeseries from a user-defined model type.\n#'\n#' @param numsubs: the number of subjects.\n#' @param numsessions: the number of sessions per subject.\n#' @param nt: the number of timesteps.\n#' @param nf: the number of features.\n#' @param options: the model to sample. Options are:\n#' \\itemize{\n#'    \\item 'gaussian': a gaussian random model.\n#' }\n#'\n#' @param noise: a parameter whether to add zero-mean noise. Provide the sigma (noise=0 is to add no noise).\n#' @param simplify: a parameter specifying whether to simplify the output. Options are FALSE and 'array'.\n#' @return ts: the output population timeseries. Can be formatted as:\n#' \\itemize{\n#'    \\item if simplify=FALSE:\n#'    \\itemize{\n#'      \\item ts[[sub]][[session]]$signal: the signal for a particular subject. Dimensions are [timesteps, features].\n#'      \\item ts[[sub]][[session]]$model: the model used for a particular subject.\n#'    }\n#'    \\item if simplify='array':\n#'    \\itemize{\n#'      \\item ts[timestep, feature, subject, session]\n#'    }\n#' }\n#' @examples\n#' ts <- sample_random_population(4, 2, 100, 1, option='gaussian')\n#' @export\n\nsample_random_population <- function(numsubs, numsessions,\n                                     nt, nf, option='gaussian',\n                                     noise=FALSE, simplify=FALSE) {\n  ts <- sapply(1:numsubs, function(sub) {\n    model <- random_model(nf, option=option)\n    tssub <- sapply(1:numsessions, function(session) {\n      sample_random_timeseries(nt, nf, model=model, noise=noise, simplify=simplify)\n    }, USE.NAMES=TRUE, simplify=simplify)\n  }, USE.NAMES=TRUE, simplify=simplify)\n\n  return(ts)\n}\n",
    "created" : 1477433508661.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4099980041",
    "id" : "3C801ACD",
    "lastKnownWriteTime" : 1477434508,
    "last_content_update" : 1477434508012,
    "path" : "~/GitHub/randomts/R/sample_random_population.R",
    "project_path" : "R/sample_random_population.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}