{
    "collab_server" : "",
    "contents" : "# Copyright (c) 2016. All rights reserved. \n#\n# An implementation of a Gaussian Mixture Model.\n#\n# written by Eric Bridgeford\n#\n# Inputs:\n#   x[i, d, d]: d dimensional data points\n#   means[d, c]: means for our initial guesses\n#   covs[d, d, c]: covariance matrices for our initial guesses\n#   pi_vec[c]: weight vector for the amount each guess gaussian\n#       contributes to the joint distribution\n#\ngmm <- function(x, means, covs, pi_vec, tol=1e-3) {\n  N = dim(x)[1]\n  K = dim(pi_vec)[1]\n  r = array(0, dim=c(N, K))\n  converge = FALSE\n  ll <- likelihood(x, means, covs, pi_vec)\n  \n  niter <- 1\n  while (!isTRUE(converge)) {\n    \n    # E step, compute the responsiblities\n    for (i in 1:N) {\n      total <- sum(sapply(1:K, function(c) prob_gauss(x[i,], means[,c], covs[,,c])))\n      for (c in 1:K) {\n        r[i, c] = pi_vec[c] * prob_gauss(x[i,], means[,c], covs[,,c])/total\n      }\n    }\n    \n    # M step, compute the new parameters for our model\n    \n    m <- array(apply(r, 2, sum))\n    \n    pi_vec <- m/sum(m)\n    \n    means <- sapply(1:length(m), function(c) {\n      1/m[c] * t(r[,c]) %*% x\n    })\n    \n    covs <- sapply(1:length(m), function(c) {\n      1/m[c] * apply(sapply(1:dim(r)[1], function(i)\n        (r[i,c] * (x[i,]-means[,c]) %*% t(x[i,]-means[,c])), simplify='array'), c(1,2), sum)\n    }, simplify='array')\n    \n    new_ll <- likelihood(x, means, covs, pi_vec)\n    if (isTRUE(abs(new_ll - ll) < tol)) {\n      converge <- TRUE\n    } else {\n      ll = new_ll\n      niter <- niter + 1\n    }\n  }\n  \n  return(list(means=means, covs=covs, pi_vec=pi_vec, n=niter))\n}\n\nlikelihood <- function(x, means, covs, pi_vec) {\n  ll <- 0\n  N <- dim(x)[1]\n  K <- dim(pi_vec)[1]\n  for (i in 1:N) {\n    ll <- ll + sum(sapply(1:K, function(c) pi_vec[c] * prob_gauss(x[i,], means[,c], covs[,,c])))\n  }\n  return(ll)\n}\n\nprob_gauss <- function(point, mean, cov) {\n  require('mvtnorm')\n  return(dmvnorm(x=point, mean=mean, sigma=cov))\n}",
    "created" : 1477363949564.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3703265796",
    "id" : "BD9D0ED6",
    "lastKnownWriteTime" : 1472353660,
    "last_content_update" : 1472353660,
    "path" : "~/GitHub/memory/Code/R/experiments/gmm.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}